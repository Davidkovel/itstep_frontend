// Dekstop first
/*
@mixin sm-u {
    @media (min-width: map-get($breakpoints, sm)){
        @content;
    }
}

@mixin md-u {
    @media (min-width: map-get($breakpoints, md)){
        @content;
    }
}

@mixin lg-u {
    @media (min-width: map-get($breakpoints, lg)){
        @content;
    }
}

// Only 

@mixin sm {
    @media (max-width: map-get($breakpoints, md)) and (min-width: map-get($breakpoints, sm)) {
        @content;
    }
}

@mixin md {
    @media (max-width: map-get($breakpoints, lg)) and (min-width: map-get($breakpoints, md)) {
        @content;
    }
}

@mixin lg {
    @media (max-width: map-get($breakpoints, xl)) and (min-width: map-get($breakpoints, lg)) {
        @content;
    }
}

@mixin xl {
    @media (min-width: map-get($breakpoints, xl)) {
        @content;
    }
}

// Mobile first

@mixin lg-d {
    @media (max-width: map-get($breakpoints, xl)) {
        @content;
    }
}

@mixin md-d {
    @media (max-width: map-get($breakpoints, lg)) {
        @content;
    }
}

@mixin sm-d {
    @media (max-width: map-get($breakpoints, md)) {
        @content;
    }
} 
*/


// breakpoints.scss
// 561 // 991 / 1200
$breakpoint-mobile: 767px; // ЗАМЕТКА: ЗАМЕНИТЬ ПОТОМ НА 561
$breakpoint-tablet: 991px;  
$breakpoint-dekstop: 1199px;

// Миксин для брейкпоинтов
@mixin respond-to($breakpoint) {
  @media (max-width: $breakpoint) {
    @content;
  }
}

// Пример использования миксина для мобильных устройств
@mixin mobile {
  @include respond-to($breakpoint-mobile) {
    @content;
  }
}


@mixin tablet {
  @include respond-to($breakpoint-tablet) {
    @content;
  }
}

@mixin dekstop {
    @include respond-to($breakpoint-dekstop) {
      @content;
    }
}
  